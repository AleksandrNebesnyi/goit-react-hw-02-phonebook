{"version":3,"sources":["Section/Section.styled.js","Section/Section.jsx","ContactForm/ContactForm.styled.js","ContactForm/ContactForm.jsx","ContactList/ContactList.styled.js","ContactItem/ContactItem.styled.js","ContactItem/ContactItem.jsx","ContactList/ContactList.jsx","ContactsFilter/ContactsFilter.styled.js","ContactsFilter/ContactsFilter.jsx","App.js","index.js"],"names":["BoxSection","styled","div","Title","h1","Section","title","children","defaultProps","Form","form","Label","label","Input","input","Button","button","ContactForm","state","name","number","hanldeChange","event","currentTarget","value","setState","hanldeSubmit","preventDefault","contact","id","nanoid","props","onSubmit","resetForm","this","type","onChange","pattern","required","Component","List","ul","Item","li","Name","span","Number","a","ContactItem","onDeleteContact","href","onClick","ContactList","contacts","deleteContact","map","ContactsFilter","filter","onFilter","App","addContact","newContact","find","alert","changeFilter","filterContacts","console","log","normalizedFilter","toLowerCase","includes","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAGaA,EAAaC,IAAOC,IAAV,iEAIVC,EAAQF,IAAOG,GAAV,kD,OCJZC,EAAU,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SACtB,OACE,eAACP,EAAD,WACE,cAACG,EAAD,UAAQG,IACPC,MAOPF,EAAQG,aAAe,CACrBF,MAAO,IASID,I,wBAAAA,I,gBCtBFI,EAAOR,IAAOS,KAAV,qJAQJC,EAAQV,IAAOW,MAAV,gHAQLC,EAAQZ,IAAOa,MAAV,0MAYLC,EAASd,IAAOe,OAAV,gbCvBbC,E,4MAOFC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAIVC,aAAe,SAAAC,GACb,MAAwBA,EAAMC,cAAtBJ,EAAR,EAAQA,KAAMK,EAAd,EAAcA,MAEd,EAAKC,SAAL,eACGN,EAAOK,K,EAKZE,aAAe,SAAAJ,GACbA,EAAMK,iBAEN,IAAMC,EAAU,CACdC,GAAIC,cACJX,KAAM,EAAKD,MAAMC,KACjBC,OAAQ,EAAKF,MAAME,QAGrB,EAAKW,MAAMC,SAASJ,GAEpB,EAAKK,a,EAIPA,UAAY,WACV,EAAKR,SAAS,CACZI,GAAI,GACJV,KAAM,GACNC,OAAQ,M,4CAIZ,WACE,OACE,eAACX,EAAD,CAAMuB,SAAUE,KAAKR,aAArB,UACE,eAACf,EAAD,kBAEE,cAACE,EAAD,CACEsB,KAAK,OACLhB,KAAK,OACLK,MAAOU,KAAKhB,MAAMC,KAClBiB,SAAUF,KAAKb,aACfgB,QAAQ,yHACR/B,MAAM,kcACNgC,UAAQ,OAGZ,eAAC3B,EAAD,oBAEE,cAACE,EAAD,CACEsB,KAAK,MACLhB,KAAK,SACLK,MAAOU,KAAKhB,MAAME,OAClBgB,SAAUF,KAAKb,aACfgB,QAAQ,+FACR/B,MAAM,mlBACNgC,UAAQ,OAIV,cAACvB,EAAD,CAAQoB,KAAK,SAAb,gC,GAzEcI,aAsFTtB,IC1FJuB,EAAOvC,IAAOwC,GAAV,2GCAJC,EAAOzC,IAAO0C,GAAV,qOAeHC,EAAO3C,IAAO4C,KAAV,oEAMLC,EAAS7C,IAAO8C,EAAV,wRAiBNhC,EAASd,IAAOe,OAAV,kcCjCbgC,E,4JAEF,WACI,MAA8Bd,KAAKH,MAAMH,QAAjCC,EAAR,EAAQA,GAAIV,EAAZ,EAAYA,KAAMC,EAAlB,EAAkBA,OACZ6B,EAAgBf,KAAKH,MAAMkB,gBACjC,OAEI,eAACP,EAAD,WACE,eAACE,EAAD,WAAOzB,EAAP,QACK,cAAC,EAAD,CAAQ+B,KAAI,cAAS9B,GAArB,SACIA,IAEH,cAAC,EAAD,CAEGe,KAAK,SACLgB,QAAS,kBAAMF,EAAgBpB,IAHlC,2B,GAZMU,aAmCXS,ICpCTI,E,4JAGN,WAGI,MAAgClB,KAAKH,MAA9BsB,EAAP,EAAOA,SAAoBxB,EAA3B,EAAiBwB,SAAUxB,GACrByB,EAAgBpB,KAAKH,MAAMkB,gBAGjC,OACI,cAACT,EAAD,UACDa,EAASE,KAAI,SAAA3B,GAAO,OACnB,cAAC,EAAD,CAEAA,QAASA,EACTqB,gBAAiBK,GAFZzB,Y,GAdaU,aA+BXa,ICpCF3C,EAAKR,IAAOS,KAAR,uIAcJC,EAAQV,IAAOW,MAAV,sIAYLC,EAAMZ,IAAOa,MAAR,4QCvBZ0C,E,4JACL,WACI,MAA2BtB,KAAKH,MAAzB0B,EAAP,EAAOA,OAAQC,EAAf,EAAeA,SAChB,OACI,mCACA,cAAC,EAAD,UACE,eAAC,EAAD,WACE,wDACA,cAAC,EAAD,CACEvB,KAAK,OACLX,MAAOiC,EACPrB,SAAUsB,e,GAXKnB,aA2BdiB,KCzBTG,G,4MACJzC,MAAO,CACLmC,SAAU,CACR,CACExB,GAAI,qCACJV,KAAM,gBACNC,OAAQ,aAEV,CACES,GAAI,qCACJV,KAAM,iBACNC,OAAQ,aAEV,CACES,GAAI,qCACJV,KAAM,gBACNC,OAAQ,aAEV,CACES,GAAI,qCACJV,KAAM,iBACNC,OAAQ,cAGZqC,OAAO,I,EAITG,WAAa,SAAAC,GAEW,EAAK3C,MAAMmC,SAASS,MACxC,SAAAlC,GAAO,OAAIA,EAAQT,OAAS0C,EAAW1C,QAIvC4C,MAAM,GAAD,OAAIF,EAAW1C,KAAf,4BAIP,EAAKM,UAAS,gBAAG4B,EAAH,EAAGA,SAAH,MAAmB,CAC/BA,SAAS,CAAEQ,GAAH,mBAAkBR,S,EAK9BW,aAAe,SAAA1C,GACb,EAAKG,SAAS,CAAEgC,OAAQnC,EAAMC,cAAcC,S,EAI9CyC,eAAiB,WACf,MAA6B,EAAK/C,MAA1BmC,EAAR,EAAQA,SAAUI,EAAlB,EAAkBA,OAClBS,QAAQC,IAAI,EAAKjD,OACjB,IAAMkD,EAAmBX,EAAOY,cAEhC,MAAc,KAAVZ,EAAsBJ,EAASI,QAAO,SAAA7B,GAAO,OAC/CA,EAAQT,KAAKkD,cAAcC,SAASF,MAG/Bf,G,EAITC,cAAgB,SAAAzB,GACd,EAAKJ,UAAS,SAAA8C,GAAS,MAAK,CAC1BlB,SAAUkB,EAAUlB,SAASI,QAAO,SAAA7B,GAAO,OAAIA,EAAQC,KAAOA,U,4CAKlE,WAIE,OACE,qCACA,cAAC,EAAD,CAASvB,MAAM,YAAf,SACA,cAAC,EAAD,CAAa0B,SAAUE,KAAK0B,eAG5B,eAAC,EAAD,CAAStD,MAAM,WAAf,UACA,cAAC,GAAD,CAAgBmD,OAAQvB,KAAKhB,MAAMuC,OAClCC,SAAUxB,KAAK8B,eAChB,cAAC,EAAD,CACAX,SAAUnB,KAAK+B,iBACfhB,gBAAiBf,KAAKoB,0B,GArFVf,aAkGHoB,MCnGfa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2098bc56.chunk.js","sourcesContent":["\r\nimport styled from \"@emotion/styled\";\r\n\r\nexport const BoxSection = styled.div `\r\npadding: 15px;\r\ntext-align: center;\r\n`;\r\nexport const Title = styled.h1`\r\nmargin-bottom: 15px;\r\n`;","import PropTypes from 'prop-types';\r\nimport { BoxSection, Title } from './Section.styled';\r\n\r\nconst Section = ({ title, children}) => {\r\n    return (\r\n      <BoxSection >\r\n        <Title>{title}</Title>\r\n        {children}\r\n      </BoxSection>\r\n    );\r\n  };\r\n\r\n\r\n\r\n  Section.defaultProps = {\r\n    title: '',\r\n   \r\n  };\r\n  \r\n  Section.propTypes = {\r\n    title: PropTypes.string.isRequired ,\r\n    children: PropTypes.node,\r\n  };\r\n\r\nexport default Section;","import styled from \"@emotion/styled\";\r\n\r\nexport const Form = styled.form`\r\nwidth: 100%;\r\nmargin-right: auto;\r\nmargin-left: auto;\r\nmargin-bottom: 15px;\r\npadding: 15px;\r\nborder: 1px solid #d4d4d4;\r\n`;\r\nexport const Label = styled.label`\r\ndisplay: flex;\r\nflex-direction: column;\r\n\r\nmargin-bottom: 15px;\r\n\r\ncolor: #333232;\r\n`;\r\nexport const Input = styled.input`\r\npadding: 11px;\r\nborder: 1px solid rgba(33, 33, 33, 0.2);\r\nborder-radius: 4px;\r\n\r\ncursor: pointer;\r\n\r\n&:focus {\r\n    outline: transparent;\r\n    border: 1px solid #2196f3;\r\n}\r\n`;\r\nexport const Button = styled.button`\r\nmin-width: 150px;\r\n  height: 40px;\r\n  border: 0px solid transparent;\r\n  border-radius: 4px;\r\n\r\n  color: #fff;\r\n  background-color: #2196f3;\r\n\r\n  box-shadow: 0px 4px 4px rgb(0 0 0 / 15%);\r\n\r\n  opacity: 1;\r\n\r\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  cursor: pointer;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    opacity: 0.8;\r\n\r\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  }\r\n\r\n`;","import {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { nanoid } from 'nanoid'\r\nimport {Form, Label, Input, Button} from './ContactForm.styled'\r\n\r\n\r\n\r\nclass ContactForm extends Component {\r\n    // PropTypes как статическое свойство\r\n    static propTypes = {\r\n      onSubmit: PropTypes.func.isRequired,\r\n    };\r\n  \r\n    // Стейт формы\r\n    state = {\r\n      name: '',\r\n      number: '',\r\n    };\r\n  \r\n    // Метод, наблюдающий за инпутами и записывающий в стейт их значения\r\n    hanldeChange = event => {\r\n      const { name, value } = event.currentTarget;\r\n  \r\n      this.setState({\r\n        [name]: value,\r\n      });\r\n    };\r\n  \r\n    // Метод на отправке формы. Формирует из стейта контакт и передает во внешний метод\r\n    hanldeSubmit = event => {\r\n      event.preventDefault();\r\n  \r\n      const contact = {\r\n        id: nanoid(),\r\n        name: this.state.name,\r\n        number: this.state.number,\r\n      };\r\n  \r\n      this.props.onSubmit(contact); // Внешний метод в пропсах класса\r\n  \r\n      this.resetForm();\r\n    };\r\n  \r\n    // Сброс полей формы (после отправки)\r\n    resetForm = () => {\r\n      this.setState({\r\n        id: '',\r\n        name: '',\r\n        number: '',\r\n      });\r\n    };\r\n  \r\n    render() {\r\n      return (\r\n        <Form onSubmit={this.hanldeSubmit}>\r\n          <Label >\r\n            Name\r\n            <Input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={this.state.name} // Пишем значение в стейт\r\n              onChange={this.hanldeChange} // Наблюдающий метод\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n            />\r\n          </Label>\r\n          <Label >\r\n            Number\r\n            <Input\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              value={this.state.number} // Пишем значение в стейт\r\n              onChange={this.hanldeChange} // Наблюдающий метод\r\n              pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n              title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n              required\r\n            />\r\n          </Label>\r\n         \r\n            <Button type=\"submit\" >\r\n              Add contact\r\n            </Button>\r\n          \r\n        </Form>\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  \r\n  export default ContactForm;","import styled from '@emotion/styled';\r\n\r\n\r\nexport const List = styled.ul`\r\ndisplay: flex;\r\nflex-wrap: wrap;\r\n\r\nmargin-left: -15px;\r\nmargin-top: -15px;\r\n\r\n`;","import styled from '@emotion/styled';\r\n\r\n \r\nexport const Item = styled.li `\r\ndisplay: flex;\r\njustify-content: space-around;\r\n\r\nflex-basis: calc(100% / 1 - 15px);\r\npadding: 15px 5px;\r\nborder: 1px solid #d4d4d4;\r\n\r\ntext-align: center;\r\n\r\nmargin-left: 15px;\r\nmargin-top: 15px\r\n\r\n\r\n`; \r\n export const Name = styled.span `\r\n color: #333232;\r\n  font-weight: 500;\r\n `; \r\n\r\n\r\nexport const Number = styled.a`\r\nmargin-right: 15px;\r\n\r\ncolor: #000000;\r\n\r\nfont-weight: 700;\r\ntext-decoration: none;\r\n\r\ntransition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n&:hover,\r\n  &:focus {\r\n    color: #2196f3;\r\n    transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  }\r\n\r\n`; \r\n\r\nexport const Button = styled.button`min-width: 50px;\r\nheight: 30px;\r\nborder: 0px solid transparent;\r\nborder-radius: 4px;\r\n\r\ncolor: #fff;\r\nbackground-color: #86888a;\r\n\r\nbox-shadow: 0px 4px 4px rgb(0 0 0 / 15%);\r\n\r\nopacity: 1;\r\n\r\ntransition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\ncursor: pointer;\r\n\r\n\r\n&:hover,\r\n&:focus {\r\n\r\n    opacity: 0.8;\r\n    background-color: #2196f3;\r\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  }\r\n\r\n`\r\n;","\r\n  \r\nimport {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Item, Name, Number, Button} from './ContactItem.styled'\r\n\r\n\r\n// Принимает один контакт и метод для удаления контакта\r\nclass ContactItem extends Component {\r\n\r\n    render(){\r\n        const { id, name, number  } = this.props.contact;\r\n        const onDeleteContact=this.props.onDeleteContact;\r\n        return (\r\n\r\n            <Item>\r\n              <Name>{name}: </Name>\r\n                   <Number href={`tel:${number}`} >\r\n                      {number}\r\n                    </Number>\r\n                    <Button\r\n                      \r\n                       type=\"button\"\r\n                       onClick={() => onDeleteContact(id)} // Метод на клике, принимает ID контакта\r\n                     >\r\n                      Delete\r\n                     </Button>\r\n                  </Item>\r\n\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nContactItem.propTypes ={\r\n    id: PropTypes.string,\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n    onDeleteContact: PropTypes.func.isRequired,\r\n\r\n}\r\n\r\nexport default ContactItem;\r\n\r\n","import { Component } from \"react\";\r\nimport {List} from './ContactList.styled';\r\nimport PropTypes from 'prop-types';\r\nimport ContactItem from \"../ContactItem/ContactItem\";\r\n\r\n\r\n// Принимает все контакты и пробрасывает дальше метод для удаления контакта\r\nclass ContactList extends Component {\r\n\r\n\r\nrender()\r\n{\r\n    \r\n    const {contacts, contacts:{id}}=this.props\r\n    const deleteContact = this.props.onDeleteContact;\r\n\r\n\r\n    return (\r\n        <List>\r\n      {contacts.map(contact => (\r\n        <ContactItem\r\n        key={id}\r\n        contact={contact}\r\n        onDeleteContact={deleteContact}\r\n        />\r\n      ))}\r\n    </List>\r\n    )\r\n}\r\n}\r\n\r\n\r\n\r\nContactList.propTypes ={\r\n    onDeleteContact :PropTypes.func,\r\n\r\n}\r\n\r\nexport default ContactList;\r\n\r\n\r\n\r\n","import styled  from \"@emotion/styled\";\r\n\r\nexport const Form=styled.form\r\n`\r\n\r\ndisplay: flex;\r\nflex-direction: column;\r\nalign-items: center;\r\n\r\nwidth: 300px;\r\npadding-bottom: 30px;\r\n\r\n`;\r\n\r\n\r\n\r\nexport const Label = styled.label \r\n`\r\ndisplay: flex;\r\nflex-direction: column;\r\nalign-items: center;\r\n\r\nmargin-bottom: 15px;\r\n\r\ncolor: #333232;\r\n`;\r\n\r\n\r\nexport const Input=styled.input\r\n`\r\nwidth: 100%;\r\npadding: 11px;\r\nborder: 1px solid rgba(33, 33, 33, 0.2);\r\nborder-radius: 4px;\r\ntransition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\ncursor: pointer;\r\n\r\n&:focus {\r\n  outline: transparent;\r\n  border: 1px solid #2196f3;\r\n};\r\n\r\n`;","import {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Form, Label,Input} from './ContactsFilter.styled'\r\n\r\n// Принимает значение с поля фильтра и метод пишущий в стейт\r\nclass ContactsFilter extends Component {\r\n render(){\r\n     const {filter, onFilter} = this.props\r\n    return (\r\n        <>\r\n        <Form >\r\n          <Label>\r\n            <h3>Find contacts by name:</h3>\r\n            <Input\r\n              type=\"text\"\r\n              value={filter}\r\n              onChange={onFilter}\r\n        />\r\n          </Label>\r\n        </Form>\r\n      </>\r\n    );\r\n }\r\n}\r\n\r\n\r\nContactsFilter.propTypes ={\r\nfilter : PropTypes.string.isRequired,\r\nonFilter: PropTypes.func.isRequired,\r\n}\r\n\r\n\r\nexport default ContactsFilter;","import {Component} from 'react';\nimport Section from './Section/Section';\nimport ContactForm from './ContactForm/ContactForm';\nimport ContactList from './ContactList/ContactList';\nimport ContactsFilter from './ContactsFilter/ContactsFilter';\n\n\nclass App extends Component {\n  state ={\n    contacts: [\n      {\n        id: \"c7a273d-8bfr-66gr-wef2-4f4d57ea2d0\",\n        name: \"Rosie Simpson\",\n        number: \"459-12-56\",\n      },\n      {\n        id: \"anctrjd-8bfr-66gr-wef2-4f4d57ea2d0\",\n        name: \"Hermione Kline\",\n        number: \"443-89-12\",\n      },\n      {\n        id: \"dkt846a-8bfr-66gr-wef2-4f4d57ea2d0\",\n        name: \"Eden Clements\",\n        number: \"645-17-79\",\n      },\n      {\n        id: \"hr7y3td-8bfr-66gr-wef2-4f4d57ea2d0\",\n        name: \"Annie Copeland\",\n        number: \"227-91-26\",\n      },\n    ],\n    filter:\"\",\n     }\n\n     // Добавляет контакт \n  addContact = newContact => {\n    // Проверка на дубликат\n    const duplicateName = this.state.contacts.find(\n      contact => contact.name === newContact.name,\n    );\n\n    if (duplicateName) {\n      alert(`${newContact.name} is already on contacts`);\n      return;\n    }\n\n    this.setState(({ contacts }) => ({\n      contacts: [newContact, ...contacts],\n    }));\n  };\n\n  // Следит за полем фильтрации и пишет в стейт\n  changeFilter = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  // Фильтрует и возвращает результат фильтра\n  filterContacts = () => {\n    const { contacts, filter } = this.state;\n    console.log(this.state);\n    const normalizedFilter = filter.toLowerCase();\n\n    if (filter !==\"\") {return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );}\n\n    return contacts;\n  };\n\n  // Удаляет контакт\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n  \n\n  render ()\n\n\n  {\n    return (\n      <>\n      <Section title=\"Phonebook\">\n      <ContactForm onSubmit={this.addContact} />\n      </Section>\n\n      <Section title=\"Contacts\" >\n      <ContactsFilter filter={this.state.filter}\n       onFilter={this.changeFilter} />\n      <ContactList \n      contacts={this.filterContacts()}  \n      onDeleteContact={this.deleteContact}/>\n\n    </Section>\n     </>   \n      \n    )\n  }\n\n}\n\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}